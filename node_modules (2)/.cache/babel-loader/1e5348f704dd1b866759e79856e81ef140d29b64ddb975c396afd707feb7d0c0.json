{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\new\\\\algo\\\\src\\\\InsertionSort.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./InsertionSort.css\"; // Include CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsertionSort = () => {\n  _s();\n  const [array, setArray] = useState([]);\n  const [i, setI] = useState(1);\n  const [j, setJ] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const timeouts = useRef([]);\n  useEffect(() => {\n    // Cleanup timeouts when the component unmounts or resets\n    return () => {\n      timeouts.current.forEach(timeout => clearTimeout(timeout));\n    };\n  }, []);\n  const resetSortingState = () => {\n    setIsPaused(false);\n    timeouts.current.forEach(timeout => clearTimeout(timeout));\n    timeouts.current = [];\n    setArray([]);\n    setI(1);\n    setJ(0);\n    setStatus(\"\");\n  };\n  const togglePause = () => {\n    setIsPaused(prev => {\n      if (!prev) {\n        // Pausing\n        timeouts.current.forEach(timeout => clearTimeout(timeout));\n        timeouts.current = [];\n      } else {\n        // Resuming\n        continueSorting();\n      }\n      return !prev;\n    });\n  };\n  const continueSorting = () => {\n    step(array, i, j);\n  };\n  const startSorting = inputArray => {\n    resetSortingState();\n    const parsedArray = inputArray.split(\" \").map(Number);\n    if (parsedArray.some(isNaN)) {\n      alert(\"Please enter valid numbers separated by spaces.\");\n      return;\n    }\n    setArray(parsedArray);\n    setStatus(\"\");\n    setI(1);\n    setJ(0);\n    step(parsedArray, 1, 0);\n  };\n  const step = (currentArr, currentI, currentJ) => {\n    if (isPaused || currentI >= currentArr.length) {\n      if (currentI >= currentArr.length) {\n        setStatus(\"Sorting complete!\");\n      }\n      return;\n    }\n    const key = currentArr[currentI];\n    setStatus(`Sorting element ${key}...`);\n    let newArr = [...currentArr];\n    const innerStep = (innerJ, innerArr) => {\n      if (isPaused || innerJ < 0 || innerArr[innerJ] <= key) {\n        innerArr[innerJ + 1] = key;\n        setArray(innerArr);\n        setStatus(`Inserted ${key} at position ${innerJ + 1}`);\n        setI(prevI => prevI + 1);\n        timeouts.current.push(setTimeout(() => step(innerArr, currentI + 1, 0), 1500));\n        return;\n      }\n      innerArr[innerJ + 1] = innerArr[innerJ];\n      setArray(innerArr);\n      setJ(innerJ - 1);\n      timeouts.current.push(setTimeout(() => innerStep(innerJ - 1, innerArr), 1500));\n    };\n    innerStep(currentJ - 1, newArr);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insertion-sort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Insertion Sort Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"arrayInput\",\n      type: \"text\",\n      placeholder: \"Enter numbers separated by spaces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"sortButton\",\n      onClick: () => startSorting(document.getElementById(\"arrayInput\").value),\n      children: \"Start Sorting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"pauseButton\",\n      onClick: togglePause,\n      children: isPaused ? \"Resume Animation\" : \"Pause Animation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualization\",\n      className: \"visualization\",\n      children: array.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `box ${index < i ? \"sorted\" : index === i ? \"highlight\" : \"\"}`,\n        children: num\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pointer\",\n      className: \"pointer\",\n      style: {\n        left: `${i * 50}px`\n      },\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\",\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(InsertionSort, \"oA6nxNssPRYNdTUdkCzCrW39b3I=\");\n_c = InsertionSort;\nexport default InsertionSort;\nvar _c;\n$RefreshReg$(_c, \"InsertionSort\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","InsertionSort","_s","array","setArray","i","setI","j","setJ","isPaused","setIsPaused","status","setStatus","timeouts","current","forEach","timeout","clearTimeout","resetSortingState","togglePause","prev","continueSorting","step","startSorting","inputArray","parsedArray","split","map","Number","some","isNaN","alert","currentArr","currentI","currentJ","length","key","newArr","innerStep","innerJ","innerArr","prevI","push","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onClick","document","getElementById","value","num","index","style","left","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/new/algo/src/InsertionSort.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./InsertionSort.css\"; // Include CSS for styling\r\n\r\nconst InsertionSort = () => {\r\n  const [array, setArray] = useState([]);\r\n  const [i, setI] = useState(1);\r\n  const [j, setJ] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [status, setStatus] = useState(\"\");\r\n  const timeouts = useRef([]);\r\n\r\n  useEffect(() => {\r\n    // Cleanup timeouts when the component unmounts or resets\r\n    return () => {\r\n      timeouts.current.forEach((timeout) => clearTimeout(timeout));\r\n    };\r\n  }, []);\r\n\r\n  const resetSortingState = () => {\r\n    setIsPaused(false);\r\n    timeouts.current.forEach((timeout) => clearTimeout(timeout));\r\n    timeouts.current = [];\r\n    setArray([]);\r\n    setI(1);\r\n    setJ(0);\r\n    setStatus(\"\");\r\n  };\r\n\r\n  const togglePause = () => {\r\n    setIsPaused((prev) => {\r\n      if (!prev) {\r\n        // Pausing\r\n        timeouts.current.forEach((timeout) => clearTimeout(timeout));\r\n        timeouts.current = [];\r\n      } else {\r\n        // Resuming\r\n        continueSorting();\r\n      }\r\n      return !prev;\r\n    });\r\n  };\r\n\r\n  const continueSorting = () => {\r\n    step(array, i, j);\r\n  };\r\n\r\n  const startSorting = (inputArray) => {\r\n    resetSortingState();\r\n    const parsedArray = inputArray.split(\" \").map(Number);\r\n\r\n    if (parsedArray.some(isNaN)) {\r\n      alert(\"Please enter valid numbers separated by spaces.\");\r\n      return;\r\n    }\r\n\r\n    setArray(parsedArray);\r\n    setStatus(\"\");\r\n    setI(1);\r\n    setJ(0);\r\n    step(parsedArray, 1, 0);\r\n  };\r\n\r\n  const step = (currentArr, currentI, currentJ) => {\r\n    if (isPaused || currentI >= currentArr.length) {\r\n      if (currentI >= currentArr.length) {\r\n        setStatus(\"Sorting complete!\");\r\n      }\r\n      return;\r\n    }\r\n\r\n    const key = currentArr[currentI];\r\n    setStatus(`Sorting element ${key}...`);\r\n    let newArr = [...currentArr];\r\n\r\n    const innerStep = (innerJ, innerArr) => {\r\n      if (isPaused || innerJ < 0 || innerArr[innerJ] <= key) {\r\n        innerArr[innerJ + 1] = key;\r\n        setArray(innerArr);\r\n        setStatus(`Inserted ${key} at position ${innerJ + 1}`);\r\n        setI((prevI) => prevI + 1);\r\n        timeouts.current.push(setTimeout(() => step(innerArr, currentI + 1, 0), 1500));\r\n        return;\r\n      }\r\n\r\n      innerArr[innerJ + 1] = innerArr[innerJ];\r\n      setArray(innerArr);\r\n      setJ(innerJ - 1);\r\n\r\n      timeouts.current.push(setTimeout(() => innerStep(innerJ - 1, innerArr), 1500));\r\n    };\r\n\r\n    innerStep(currentJ - 1, newArr);\r\n  };\r\n\r\n  return (\r\n    <div className=\"insertion-sort-container\">\r\n      <h1>Insertion Sort Visualization</h1>\r\n      <input\r\n        id=\"arrayInput\"\r\n        type=\"text\"\r\n        placeholder=\"Enter numbers separated by spaces\"\r\n      />\r\n      <button\r\n        id=\"sortButton\"\r\n        onClick={() =>\r\n          startSorting(document.getElementById(\"arrayInput\").value)\r\n        }\r\n      >\r\n        Start Sorting\r\n      </button>\r\n      <button id=\"pauseButton\" onClick={togglePause}>\r\n        {isPaused ? \"Resume Animation\" : \"Pause Animation\"}\r\n      </button>\r\n      <div id=\"visualization\" className=\"visualization\">\r\n        {array.map((num, index) => (\r\n          <div\r\n            key={index}\r\n            className={`box ${\r\n              index < i ? \"sorted\" : index === i ? \"highlight\" : \"\"\r\n            }`}\r\n          >\r\n            {num}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div id=\"pointer\" className=\"pointer\" style={{ left: `${i * 50}px` }}>\r\n        â–¼\r\n      </div>\r\n      <div id=\"status\" className=\"status\">\r\n        {status}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertionSort;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}