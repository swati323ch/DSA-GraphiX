{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\new\\\\algo\\\\src\\\\InsertionSort.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './InsertionSort.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsertionSort = () => {\n  _s();\n  const [array, setArray] = useState([]);\n  const [isPaused, setIsPaused] = useState(false);\n  const [i, setI] = useState(1);\n  const [j, setJ] = useState(0);\n  const [key, setKey] = useState(null);\n  const [status, setStatus] = useState('');\n  const [isSorting, setIsSorting] = useState(false);\n  const pointerRef = useRef(null); // Ref for pointer\n\n  const [inputValue, setInputValue] = useState('');\n\n  // Function to reset the sorting state\n  const resetSortingState = () => {\n    setIsPaused(false);\n    setIsSorting(false);\n    setArray([]);\n    setI(1);\n    setJ(0);\n    setKey(null);\n    setStatus('');\n  };\n\n  // Update pointer position\n  const updatePointer = () => {\n    const currentBox = document.getElementById(`box-${i}`);\n    if (currentBox && pointerRef.current) {\n      const offsetX = currentBox.offsetLeft + currentBox.offsetWidth / 2 - 30;\n      const offsetY = currentBox.offsetTop + currentBox.offsetHeight;\n      pointerRef.current.style.left = `${offsetX}px`;\n      pointerRef.current.style.top = `${offsetY}px`;\n    }\n  };\n\n  // Function to start sorting\n  const startSorting = () => {\n    if (!inputValue) {\n      setStatus('Please enter an array to sort.');\n      return;\n    }\n    resetSortingState();\n    const parsedArray = inputValue.split(' ').map(Number);\n    setArray(parsedArray);\n    setStatus('');\n    setIsSorting(true);\n    step();\n  };\n\n  // Sorting step function\n  const step = () => {\n    if (isPaused) return;\n    if (i >= array.length) {\n      setStatus('Sorting complete!');\n      return;\n    }\n    setKey(array[i]);\n    setJ(i - 1);\n    setStatus(`Sorting element ${array[i]}...`);\n    updatePointer(); // Update pointer position\n\n    innerStep(array[i]);\n  };\n\n  // Inner step for insertion sorting\n  const innerStep = key => {\n    if (isPaused) return;\n    if (j >= 0 && array[j] > key) {\n      const newArray = [...array];\n      newArray[j + 1] = array[j];\n      setArray(newArray);\n      setJ(j - 1);\n      setTimeout(() => innerStep(key), 1000); // Continue inner loop\n    } else {\n      const newArray = [...array];\n      newArray[j + 1] = key;\n      setArray(newArray);\n      setStatus(`Inserted ${key} at position ${j + 1}`);\n      setI(i + 1);\n      setTimeout(step, 1000); // Continue to next step\n    }\n  };\n\n  // Watch for changes to the array to trigger visualization updates\n  useEffect(() => {\n    if (isSorting) {\n      step();\n    }\n  }, [i, j, array, isPaused, isSorting]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insertion-sort-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Insertion Sort Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"arrayInput\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Enter array (e.g., 5 2 8 3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"visualization\",\n        children: array.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `box-${index}`,\n          className: `box ${index === j ? 'highlight' : ''} ${index === i ? 'sorted' : ''}`,\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pointer\",\n        ref: pointerRef,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"arrow\",\n          children: \"\\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSorting,\n        disabled: isSorting,\n        children: \"Start Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPaused(!isPaused),\n        children: isPaused ? 'Resume' : 'Pause'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(InsertionSort, \"VAiNGBS0cfTaXF0AzAWWP4PiDPg=\");\n_c = InsertionSort;\nexport default InsertionSort;\nvar _c;\n$RefreshReg$(_c, \"InsertionSort\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","InsertionSort","_s","array","setArray","isPaused","setIsPaused","i","setI","j","setJ","key","setKey","status","setStatus","isSorting","setIsSorting","pointerRef","inputValue","setInputValue","resetSortingState","updatePointer","currentBox","document","getElementById","current","offsetX","offsetLeft","offsetWidth","offsetY","offsetTop","offsetHeight","style","left","top","startSorting","parsedArray","split","map","Number","step","length","innerStep","newArray","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","placeholder","index","ref","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/new/algo/src/InsertionSort.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './InsertionSort.css';\r\n\r\nconst InsertionSort = () => {\r\n  const [array, setArray] = useState([]);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [i, setI] = useState(1);\r\n  const [j, setJ] = useState(0);\r\n  const [key, setKey] = useState(null);\r\n  const [status, setStatus] = useState('');\r\n  const [isSorting, setIsSorting] = useState(false);\r\n  const pointerRef = useRef(null);  // Ref for pointer\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  // Function to reset the sorting state\r\n  const resetSortingState = () => {\r\n    setIsPaused(false);\r\n    setIsSorting(false);\r\n    setArray([]);\r\n    setI(1);\r\n    setJ(0);\r\n    setKey(null);\r\n    setStatus('');\r\n  };\r\n\r\n  // Update pointer position\r\n  const updatePointer = () => {\r\n    const currentBox = document.getElementById(`box-${i}`);\r\n    if (currentBox && pointerRef.current) {\r\n      const offsetX = currentBox.offsetLeft + currentBox.offsetWidth / 2 - 30;\r\n      const offsetY = currentBox.offsetTop + currentBox.offsetHeight;\r\n      pointerRef.current.style.left = `${offsetX}px`;\r\n      pointerRef.current.style.top = `${offsetY}px`;\r\n    }\r\n  };\r\n\r\n  // Function to start sorting\r\n  const startSorting = () => {\r\n    if (!inputValue) {\r\n      setStatus('Please enter an array to sort.');\r\n      return;\r\n    }\r\n    resetSortingState();\r\n    const parsedArray = inputValue.split(' ').map(Number);\r\n    setArray(parsedArray);\r\n    setStatus('');\r\n    setIsSorting(true);\r\n    step();\r\n  };\r\n\r\n  // Sorting step function\r\n  const step = () => {\r\n    if (isPaused) return;\r\n\r\n    if (i >= array.length) {\r\n      setStatus('Sorting complete!');\r\n      return;\r\n    }\r\n\r\n    setKey(array[i]);\r\n    setJ(i - 1);\r\n    setStatus(`Sorting element ${array[i]}...`);\r\n    updatePointer();  // Update pointer position\r\n\r\n    innerStep(array[i]);\r\n  };\r\n\r\n  // Inner step for insertion sorting\r\n  const innerStep = (key) => {\r\n    if (isPaused) return;\r\n\r\n    if (j >= 0 && array[j] > key) {\r\n      const newArray = [...array];\r\n      newArray[j + 1] = array[j];\r\n      setArray(newArray);\r\n      setJ(j - 1);\r\n\r\n      setTimeout(() => innerStep(key), 1000);  // Continue inner loop\r\n    } else {\r\n      const newArray = [...array];\r\n      newArray[j + 1] = key;\r\n      setArray(newArray);\r\n\r\n      setStatus(`Inserted ${key} at position ${j + 1}`);\r\n      setI(i + 1);\r\n      setTimeout(step, 1000);  // Continue to next step\r\n    }\r\n  };\r\n\r\n  // Watch for changes to the array to trigger visualization updates\r\n  useEffect(() => {\r\n    if (isSorting) {\r\n      step();\r\n    }\r\n  }, [i, j, array, isPaused, isSorting]);\r\n\r\n  return (\r\n    <div className=\"insertion-sort-container\">\r\n      <div className=\"container\">\r\n        <h1>Insertion Sort Visualization</h1>\r\n        <input\r\n          type=\"text\"\r\n          id=\"arrayInput\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          placeholder=\"Enter array (e.g., 5 2 8 3)\"\r\n        />\r\n        <div id=\"visualization\">\r\n          {array.map((value, index) => (\r\n            <div\r\n              key={index}\r\n              id={`box-${index}`}\r\n              className={`box ${index === j ? 'highlight' : ''} ${index === i ? 'sorted' : ''}`}\r\n            >\r\n              {value}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div id=\"pointer\" ref={pointerRef}>\r\n          <span id=\"arrow\">→</span>\r\n        </div>\r\n        <div id=\"status\">{status}</div>\r\n        <button onClick={startSorting} disabled={isSorting}>\r\n          Start Sorting\r\n        </button>\r\n        <button onClick={() => setIsPaused(!isPaused)}>\r\n          {isPaused ? 'Resume' : 'Pause'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertionSort;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}