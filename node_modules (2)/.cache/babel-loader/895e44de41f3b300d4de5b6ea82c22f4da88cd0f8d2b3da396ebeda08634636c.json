{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\new\\\\algo\\\\src\\\\GraphVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { toPng } from \"html-to-image\"; // Library for converting HTML to image\nimport \"./GraphVisualization.css\";\nimport db from \"./assets/down-arrow_752650.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphVisualization = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isDirected, setIsDirected] = useState(true);\n  const [traversalResult, setTraversalResult] = useState(\"\"); // Stores traversal results\n  const svgRef = useRef();\n  const graphContainerRef = useRef(); // Ref for the graph container\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setInput(value);\n    validateInput(value);\n  };\n  const validateInput = input => {\n    try {\n      const lines = input.trim().split(\"\\n\");\n      const newNodes = [];\n      const newEdges = [];\n      lines.forEach(line => {\n        const [from, to] = line.trim().split(\" \");\n        if (from === undefined || to === undefined || isNaN(from) || isNaN(to)) {\n          throw new Error(\"Invalid input format! Each line must have two integers.\");\n        }\n        if (!newNodes.some(node => node.id === from)) newNodes.push({\n          id: from\n        });\n        if (!newNodes.some(node => node.id === to)) newNodes.push({\n          id: to\n        });\n        newEdges.push({\n          source: from,\n          target: to\n        });\n        if (!isDirected) {\n          newEdges.push({\n            source: to,\n            target: from\n          });\n        }\n      });\n      const uniqueEdges = newEdges.filter((edge, index, self) => index === self.findIndex(e => e.source === edge.source && e.target === edge.target || e.source === edge.target && e.target === edge.source));\n      setNodes(newNodes);\n      setEdges(uniqueEdges);\n      setError(\"\");\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const downloadGraph = () => {\n    if (graphContainerRef.current) {\n      toPng(graphContainerRef.current).then(dataUrl => {\n        const link = document.createElement(\"a\");\n        link.download = \"graph_visualization.png\";\n        link.href = dataUrl;\n        link.click();\n      }).catch(err => {\n        console.error(\"Failed to download graph as PNG:\", err);\n      });\n    }\n  };\n  const bfs = start => {\n    const visited = new Set();\n    const queue = [start];\n    const result = [];\n    const highlightNode = id => {\n      d3.select(svgRef.current).selectAll(\"circle\").filter(d => d.id === id).attr(\"fill\", \"#FFA726\");\n    };\n    while (queue.length > 0) {\n      const current = queue.shift();\n      if (!visited.has(current)) {\n        visited.add(current);\n        result.push(current);\n        highlightNode(current);\n        const neighbors = edges.filter(edge => edge.source === current).map(edge => edge.target);\n        queue.push(...neighbors.filter(neighbor => !visited.has(neighbor)));\n      }\n    }\n    setTraversalResult(`BFS: ${result.join(\" -> \")}`);\n  };\n  const dfs = start => {\n    const visited = new Set();\n    const result = [];\n    const highlightNode = id => {\n      d3.select(svgRef.current).selectAll(\"circle\").filter(d => d.id === id).attr(\"fill\", \"#29B6F6\");\n    };\n    const dfsHelper = node => {\n      if (!visited.has(node)) {\n        visited.add(node);\n        result.push(node);\n        highlightNode(node);\n        const neighbors = edges.filter(edge => edge.source === node).map(edge => edge.target);\n        neighbors.forEach(neighbor => dfsHelper(neighbor));\n      }\n    };\n    dfsHelper(start);\n    setTraversalResult(`DFS: ${result.join(\" -> \")}`);\n  };\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    if (nodes.length === 0 || edges.length === 0) return;\n    const width = 700;\n    const height = 350;\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(edges).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(width / 2, height / 2)).force(\"x\", d3.forceX(width / 2).strength(0.1)).force(\"y\", d3.forceY(height / 2).strength(0.1)).on(\"tick\", ticked);\n    function constrainBounds(d) {\n      d.x = Math.max(20, Math.min(width - 20, d.x));\n      d.y = Math.max(20, Math.min(height - 20, d.y));\n    }\n    svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 25).attr(\"refY\", 0).attr(\"orient\", \"auto\").attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"fill\", \"#42a5f5\");\n    const link = svg.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(edges).enter().append(\"line\").attr(\"stroke\", \"#333\").attr(\"stroke-width\", 2).attr(\"marker-end\", isDirected ? \"url(#arrowhead)\" : null);\n    const node = svg.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"r\", 20).attr(\"fill\", \"#4CAF50\").attr(\"stroke\", \"black\").attr(\"stroke-width\", 2).call(d3.drag().on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\", dragEnded));\n    const label = svg.append(\"g\").attr(\"class\", \"labels\").selectAll(\"text\").data(nodes).enter().append(\"text\").text(d => d.id).attr(\"font-size\", \"12px\").attr(\"text-anchor\", \"middle\").attr(\"dy\", \".35em\").attr(\"fill\", \"white\");\n    function ticked() {\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      node.each(constrainBounds).attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n      label.attr(\"x\", d => d.x).attr(\"y\", d => d.y);\n    }\n    function dragStarted(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragged(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnded(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    return () => simulation.stop();\n  }, [nodes, edges, isDirected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-visualization-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [isDirected ? \"Directed\" : \"Undirected\", \" Graph Visualization\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-button ${isDirected ? \"active\" : \"\"}`,\n        onClick: () => {\n          setIsDirected(true);\n          validateInput(input);\n        },\n        children: \"Directed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `toggle-button ${!isDirected ? \"active\" : \"\"}`,\n        onClick: () => {\n          setIsDirected(false);\n          validateInput(input);\n        },\n        children: \"Undirected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-download-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: `Enter edges (e.g., \"0 1\" or \"0 1\\\\n1 2\")`,\n        onChange: handleInputChange,\n        className: \"graph-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-button\",\n        onClick: downloadGraph,\n        children: \"Download Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      ref: graphContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: \"700\",\n        height: \"350\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"traversal-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nodes.length > 0 ? bfs(nodes[0].id) : alert(\"No nodes to traverse!\"),\n        children: \"BFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nodes.length > 0 ? dfs(nodes[0].id) : alert(\"No nodes to traverse!\"),\n        children: \"DFS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), traversalResult && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"traversal-result\",\n      children: traversalResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphVisualization, \"luAouUTvW73t+Caxili9E0/g8QU=\");\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","toPng","db","jsxDEV","_jsxDEV","GraphVisualization","_s","nodes","setNodes","edges","setEdges","input","setInput","error","setError","isDirected","setIsDirected","traversalResult","setTraversalResult","svgRef","graphContainerRef","handleInputChange","e","value","target","validateInput","lines","trim","split","newNodes","newEdges","forEach","line","from","to","undefined","isNaN","Error","some","node","id","push","source","uniqueEdges","filter","edge","index","self","findIndex","message","downloadGraph","current","then","dataUrl","link","document","createElement","download","href","click","catch","err","console","bfs","start","visited","Set","queue","result","highlightNode","select","selectAll","d","attr","length","shift","has","add","neighbors","map","neighbor","join","dfs","dfsHelper","svg","remove","width","height","simulation","forceSimulation","force","forceLink","distance","forceManyBody","strength","forceCenter","forceX","forceY","on","ticked","constrainBounds","x","Math","max","min","y","append","data","enter","call","drag","dragStarted","dragged","dragEnded","label","text","each","event","active","alphaTarget","restart","fx","fy","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","ref","alert","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/new/algo/src/GraphVisualization.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { toPng } from \"html-to-image\"; // Library for converting HTML to image\r\nimport \"./GraphVisualization.css\";\r\nimport db from \"./assets/down-arrow_752650.png\";\r\n\r\nconst GraphVisualization = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [edges, setEdges] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isDirected, setIsDirected] = useState(true);\r\n  const [traversalResult, setTraversalResult] = useState(\"\"); // Stores traversal results\r\n  const svgRef = useRef();\r\n  const graphContainerRef = useRef(); // Ref for the graph container\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setInput(value);\r\n    validateInput(value);\r\n  };\r\n\r\n  const validateInput = (input) => {\r\n    try {\r\n      const lines = input.trim().split(\"\\n\");\r\n      const newNodes = [];\r\n      const newEdges = [];\r\n\r\n      lines.forEach((line) => {\r\n        const [from, to] = line.trim().split(\" \");\r\n        if (from === undefined || to === undefined || isNaN(from) || isNaN(to)) {\r\n          throw new Error(\"Invalid input format! Each line must have two integers.\");\r\n        }\r\n\r\n        if (!newNodes.some((node) => node.id === from)) newNodes.push({ id: from });\r\n        if (!newNodes.some((node) => node.id === to)) newNodes.push({ id: to });\r\n\r\n        newEdges.push({ source: from, target: to });\r\n\r\n        if (!isDirected) {\r\n          newEdges.push({ source: to, target: from });\r\n        }\r\n      });\r\n\r\n      const uniqueEdges = newEdges.filter(\r\n        (edge, index, self) =>\r\n          index ===\r\n          self.findIndex(\r\n            (e) =>\r\n              (e.source === edge.source && e.target === edge.target) ||\r\n              (e.source === edge.target && e.target === edge.source)\r\n          )\r\n      );\r\n\r\n      setNodes(newNodes);\r\n      setEdges(uniqueEdges);\r\n      setError(\"\");\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const downloadGraph = () => {\r\n    if (graphContainerRef.current) {\r\n      toPng(graphContainerRef.current)\r\n        .then((dataUrl) => {\r\n          const link = document.createElement(\"a\");\r\n          link.download = \"graph_visualization.png\";\r\n          link.href = dataUrl;\r\n          link.click();\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Failed to download graph as PNG:\", err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const bfs = (start) => {\r\n    const visited = new Set();\r\n    const queue = [start];\r\n    const result = [];\r\n\r\n    const highlightNode = (id) => {\r\n      d3.select(svgRef.current)\r\n        .selectAll(\"circle\")\r\n        .filter((d) => d.id === id)\r\n        .attr(\"fill\", \"#FFA726\");\r\n    };\r\n\r\n    while (queue.length > 0) {\r\n      const current = queue.shift();\r\n      if (!visited.has(current)) {\r\n        visited.add(current);\r\n        result.push(current);\r\n        highlightNode(current);\r\n\r\n        const neighbors = edges\r\n          .filter((edge) => edge.source === current)\r\n          .map((edge) => edge.target);\r\n\r\n        queue.push(...neighbors.filter((neighbor) => !visited.has(neighbor)));\r\n      }\r\n    }\r\n\r\n    setTraversalResult(`BFS: ${result.join(\" -> \")}`);\r\n  };\r\n\r\n  const dfs = (start) => {\r\n    const visited = new Set();\r\n    const result = [];\r\n\r\n    const highlightNode = (id) => {\r\n      d3.select(svgRef.current)\r\n        .selectAll(\"circle\")\r\n        .filter((d) => d.id === id)\r\n        .attr(\"fill\", \"#29B6F6\");\r\n    };\r\n\r\n    const dfsHelper = (node) => {\r\n      if (!visited.has(node)) {\r\n        visited.add(node);\r\n        result.push(node);\r\n        highlightNode(node);\r\n\r\n        const neighbors = edges\r\n          .filter((edge) => edge.source === node)\r\n          .map((edge) => edge.target);\r\n\r\n        neighbors.forEach((neighbor) => dfsHelper(neighbor));\r\n      }\r\n    };\r\n\r\n    dfsHelper(start);\r\n    setTraversalResult(`DFS: ${result.join(\" -> \")}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    if (nodes.length === 0 || edges.length === 0) return;\r\n\r\n    const width = 700;\r\n    const height = 350;\r\n\r\n    const simulation = d3\r\n      .forceSimulation(nodes)\r\n      .force(\"link\", d3.forceLink(edges).id((d) => d.id).distance(100))\r\n      .force(\"charge\", d3.forceManyBody().strength(-300))\r\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\r\n      .force(\"x\", d3.forceX(width / 2).strength(0.1))\r\n      .force(\"y\", d3.forceY(height / 2).strength(0.1))\r\n      .on(\"tick\", ticked);\r\n\r\n    function constrainBounds(d) {\r\n      d.x = Math.max(20, Math.min(width - 20, d.x));\r\n      d.y = Math.max(20, Math.min(height - 20, d.y));\r\n    }\r\n\r\n    svg\r\n      .append(\"defs\")\r\n      .append(\"marker\")\r\n      .attr(\"id\", \"arrowhead\")\r\n      .attr(\"viewBox\", \"0 -5 10 10\")\r\n      .attr(\"refX\", 25)\r\n      .attr(\"refY\", 0)\r\n      .attr(\"orient\", \"auto\")\r\n      .attr(\"markerWidth\", 6)\r\n      .attr(\"markerHeight\", 6)\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M0,-5L10,0L0,5\")\r\n      .attr(\"fill\", \"#42a5f5\");\r\n\r\n    const link = svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"links\")\r\n      .selectAll(\"line\")\r\n      .data(edges)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"stroke\", \"#333\")\r\n      .attr(\"stroke-width\", 2)\r\n      .attr(\"marker-end\", isDirected ? \"url(#arrowhead)\" : null);\r\n\r\n    const node = svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"nodes\")\r\n      .selectAll(\"circle\")\r\n      .data(nodes)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"r\", 20)\r\n      .attr(\"fill\", \"#4CAF50\")\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"stroke-width\", 2)\r\n      .call(\r\n        d3\r\n          .drag()\r\n          .on(\"start\", dragStarted)\r\n          .on(\"drag\", dragged)\r\n          .on(\"end\", dragEnded)\r\n      );\r\n\r\n    const label = svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"labels\")\r\n      .selectAll(\"text\")\r\n      .data(nodes)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text((d) => d.id)\r\n      .attr(\"font-size\", \"12px\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"dy\", \".35em\")\r\n      .attr(\"fill\", \"white\");\r\n\r\n    function ticked() {\r\n      link\r\n        .attr(\"x1\", (d) => d.source.x)\r\n        .attr(\"y1\", (d) => d.source.y)\r\n        .attr(\"x2\", (d) => d.target.x)\r\n        .attr(\"y2\", (d) => d.target.y);\r\n\r\n      node.each(constrainBounds).attr(\"cx\", (d) => d.x).attr(\"cy\", (d) => d.y);\r\n\r\n      label.attr(\"x\", (d) => d.x).attr(\"y\", (d) => d.y);\r\n    }\r\n\r\n    function dragStarted(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    }\r\n\r\n    function dragged(event, d) {\r\n      d.fx = event.x;\r\n      d.fy = event.y;\r\n    }\r\n\r\n    function dragEnded(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    }\r\n\r\n    return () => simulation.stop();\r\n  }, [nodes, edges, isDirected]);\r\n\r\n  return (\r\n    <div className=\"graph-visualization-container\">\r\n      <h1>{isDirected ? \"Directed\" : \"Undirected\"} Graph Visualization</h1>\r\n\r\n      <div className=\"button-container\">\r\n        <button\r\n          className={`toggle-button ${isDirected ? \"active\" : \"\"}`}\r\n          onClick={() => {\r\n            setIsDirected(true);\r\n            validateInput(input);\r\n          }}\r\n        >\r\n          Directed\r\n        </button>\r\n        <button\r\n          className={`toggle-button ${!isDirected ? \"active\" : \"\"}`}\r\n          onClick={() => {\r\n            setIsDirected(false);\r\n            validateInput(input);\r\n          }}\r\n        >\r\n          Undirected\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"input-download-container\">\r\n        <textarea\r\n          placeholder={`Enter edges (e.g., \"0 1\" or \"0 1\\\\n1 2\")`}\r\n          onChange={handleInputChange}\r\n          className=\"graph-input\"\r\n        ></textarea>\r\n        <button className=\"download-button\" onClick={downloadGraph}>\r\n          Download Graph\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <div className=\"graph-container\" ref={graphContainerRef}>\r\n        <svg ref={svgRef} width=\"700\" height=\"350\"></svg>\r\n      </div>\r\n\r\n      <div className=\"traversal-container\">\r\n        <button\r\n          onClick={() =>\r\n            nodes.length > 0 ? bfs(nodes[0].id) : alert(\"No nodes to traverse!\")\r\n          }\r\n        >\r\n          BFS\r\n        </button>\r\n        <button\r\n          onClick={() =>\r\n            nodes.length > 0 ? dfs(nodes[0].id) : alert(\"No nodes to traverse!\")\r\n          }\r\n        >\r\n          DFS\r\n        </button>\r\n      </div>\r\n\r\n      {traversalResult && <p className=\"traversal-result\">{traversalResult}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}