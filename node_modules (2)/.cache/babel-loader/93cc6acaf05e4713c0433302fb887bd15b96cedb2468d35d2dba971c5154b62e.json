{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\new\\\\algo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport './InsertionSort.css';\nimport './BubbleSort.css';\nimport './GraphVisualization.css';\nimport './TreeVisualisation.css';\nimport InsertionSort from './InsertionSort';\nimport BubbleSort from './BubbleSort';\nimport GraphVisualization from './GraphVisualization';\nimport TreeVisualisation from './TreeVisualisation';\nimport MainPage from './mainpage'; // Ensure this is correctly named and imported\nimport Background from './Background'; // Import your animated background component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"mainpage\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/visualizer\",\n      element: /*#__PURE__*/_jsxDEV(Visualizer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nconst Visualizer = () => {\n  _s();\n  const [visualizationType, setVisualizationType] = useState('');\n  const navigate = useNavigate();\n  const showSorting = algorithm => {\n    setVisualizationType(algorithm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Algorithm Visualizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"algorithm-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-button\",\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => showSorting('bubble'),\n            children: \"Bubble Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => showSorting('insertion'),\n            children: \"Insertion Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => setVisualizationType('tree'),\n        children: \"Tree Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: () => setVisualizationType('graph'),\n        children: \"Graph Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate('/'),\n        children: \"Back to Main Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualization-container\",\n      children: [visualizationType === 'bubble' && /*#__PURE__*/_jsxDEV(BubbleSort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 44\n      }, this), visualizationType === 'insertion' && /*#__PURE__*/_jsxDEV(InsertionSort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 47\n      }, this), visualizationType === 'graph' && /*#__PURE__*/_jsxDEV(GraphVisualization, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 43\n      }, this), visualizationType === 'tree' && /*#__PURE__*/_jsxDEV(TreeVisualisation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"bottom-right-image\",\n      src: \"/assets/image.svg\",\n      alt: \"Bottom Right Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Visualizer, \"G5c4qvRrD40HhTpdvCRv1tH2Ymk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = Visualizer;\nexport default App;\n\n/*\nimport React, { useState } from 'react';\nimport './App.css';\nimport './InsertionSort.css';\nimport './BubbleSort.css';\nimport './GraphVisualization.css';\nimport './TreeVisualisation.css';\nimport AnimatedBackground from './Background'; // Import animated background\nimport InsertionSort from './InsertionSort';\nimport BubbleSort from './BubbleSort';\nimport GraphVisualization from './GraphVisualization';\nimport TreeVisualisation from './TreeVisualisation';\n\nfunction App() {\n  const [visualizationType, setVisualizationType] = useState('');\n\n  const showSorting = (algorithm) => {\n    setVisualizationType(algorithm);\n  };\n\n  return (\n    <div className=\"App\">\n      <AnimatedBackground /> \n      <div className=\"navbar\">\n        <h1>Algorithm Visualizer</h1>\n      </div>\n      <div className=\"algorithm-buttons\">\n        <div className=\"dropdown\">\n          <button className=\"nav-button\">Sort</button>\n          <div className=\"dropdown-content\">\n            <a href=\"#\" onClick={() => showSorting('bubble')}>Bubble Sort</a>\n            <a href=\"#\" onClick={() => showSorting('insertion')}>Insertion Sort</a>\n          </div>\n        </div>\n        <button className=\"nav-button\" onClick={() => setVisualizationType('tree')}>Tree Visualization</button>\n        <button className=\"nav-button\" onClick={() => setVisualizationType('graph')}>Graph Visualization</button>\n      </div>\n\n      <div id=\"visualization-container\">\n        {visualizationType === 'bubble' && <BubbleSort />}\n        {visualizationType === 'insertion' && <InsertionSort />}\n        {visualizationType === 'graph' && <GraphVisualization />}\n        {visualizationType === 'tree' && <TreeVisualisation />}\n      </div>\n\n      <img id=\"bottom-right-image\" src=\"/assets/image.svg\" alt=\"Bottom Right Image\" />\n      <img id=\"bottom-left-image\" src=\"/assets/undraw_abstract_re_l9xy.svg\" alt=\"Bottom Left Image\" />\n    </div>\n  );\n}\n\nexport default App;\n\n*/\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Visualizer\");","map":{"version":3,"names":["React","useState","Routes","Route","useNavigate","InsertionSort","BubbleSort","GraphVisualization","TreeVisualisation","MainPage","Background","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Visualizer","_c","_s","visualizationType","setVisualizationType","navigate","showSorting","algorithm","className","href","onClick","id","src","alt","_c2","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/new/algo/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport './InsertionSort.css';\nimport './BubbleSort.css';\nimport './GraphVisualization.css';\nimport './TreeVisualisation.css';\nimport InsertionSort from './InsertionSort';\nimport BubbleSort from './BubbleSort';\nimport GraphVisualization from './GraphVisualization';\nimport TreeVisualisation from './TreeVisualisation';\nimport MainPage from './mainpage'; // Ensure this is correctly named and imported\nimport Background from './Background'; // Import your animated background component\n\nconst App = () => {\n  return (\n    <Routes>\n      {/* Render MainPage with the Background */}\n      <Route\n        path=\"/\"\n        element={\n          <>\n            <Background />\n            <mainpage />\n          </>\n        }\n      />\n\n      {/* Visualization page without Background */}\n      <Route path=\"/visualizer\" element={<Visualizer />} />\n    </Routes>\n  );\n};\n\nconst Visualizer = () => {\n  const [visualizationType, setVisualizationType] = useState('');\n  const navigate = useNavigate();\n\n  const showSorting = (algorithm) => {\n    setVisualizationType(algorithm);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"navbar\">\n        <h1>Algorithm Visualizer</h1>\n      </div>\n      <div className=\"algorithm-buttons\">\n        <div className=\"dropdown\">\n          <button className=\"nav-button\">Sort</button>\n          <div className=\"dropdown-content\">\n            <a href=\"#\" onClick={() => showSorting('bubble')}>Bubble Sort</a>\n            <a href=\"#\" onClick={() => showSorting('insertion')}>Insertion Sort</a>\n          </div>\n        </div>\n        <button className=\"nav-button\" onClick={() => setVisualizationType('tree')}>Tree Visualization</button>\n        <button className=\"nav-button\" onClick={() => setVisualizationType('graph')}>Graph Visualization</button>\n        <button className=\"back-button\" onClick={() => navigate('/')}>\n          Back to Main Menu\n        </button>\n      </div>\n      <div id=\"visualization-container\">\n        {visualizationType === 'bubble' && <BubbleSort />}\n        {visualizationType === 'insertion' && <InsertionSort />}\n        {visualizationType === 'graph' && <GraphVisualization />}\n        {visualizationType === 'tree' && <TreeVisualisation />}\n      </div>\n      <img id=\"bottom-right-image\" src=\"/assets/image.svg\" alt=\"Bottom Right Image\" />\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n\n\n/*\nimport React, { useState } from 'react';\nimport './App.css';\nimport './InsertionSort.css';\nimport './BubbleSort.css';\nimport './GraphVisualization.css';\nimport './TreeVisualisation.css';\nimport AnimatedBackground from './Background'; // Import animated background\nimport InsertionSort from './InsertionSort';\nimport BubbleSort from './BubbleSort';\nimport GraphVisualization from './GraphVisualization';\nimport TreeVisualisation from './TreeVisualisation';\n\nfunction App() {\n  const [visualizationType, setVisualizationType] = useState('');\n\n  const showSorting = (algorithm) => {\n    setVisualizationType(algorithm);\n  };\n\n  return (\n    <div className=\"App\">\n      <AnimatedBackground /> \n      <div className=\"navbar\">\n        <h1>Algorithm Visualizer</h1>\n      </div>\n      <div className=\"algorithm-buttons\">\n        <div className=\"dropdown\">\n          <button className=\"nav-button\">Sort</button>\n          <div className=\"dropdown-content\">\n            <a href=\"#\" onClick={() => showSorting('bubble')}>Bubble Sort</a>\n            <a href=\"#\" onClick={() => showSorting('insertion')}>Insertion Sort</a>\n          </div>\n        </div>\n        <button className=\"nav-button\" onClick={() => setVisualizationType('tree')}>Tree Visualization</button>\n        <button className=\"nav-button\" onClick={() => setVisualizationType('graph')}>Graph Visualization</button>\n      </div>\n\n      <div id=\"visualization-container\">\n        {visualizationType === 'bubble' && <BubbleSort />}\n        {visualizationType === 'insertion' && <InsertionSort />}\n        {visualizationType === 'graph' && <GraphVisualization />}\n        {visualizationType === 'tree' && <TreeVisualisation />}\n      </div>\n\n      <img id=\"bottom-right-image\" src=\"/assets/image.svg\" alt=\"Bottom Right Image\" />\n      <img id=\"bottom-left-image\" src=\"/assets/undraw_abstract_re_l9xy.svg\" alt=\"Bottom Left Image\" />\n    </div>\n  );\n}\n\nexport default App;\n\n*/ \n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}